import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import AOS from "aos";
import "aos/dist/aos.css";
import "./HomePage.css";
import "bootstrap/dist/css/bootstrap.min.css";
import {
  Book,
  PersonCheck,
  BarChartLine,
  Download,
  ChatSquareDots,
  PatchQuestion,
  BoxArrowInRight,
  PencilSquare,
  ExclamationTriangle,
  People,
} from "react-bootstrap-icons";

const translations: Record<string, any> = {
  en: {
    welcome: "Welcome to AI LearnMate",
    tagline: "Empowering learners with technology ‚Äî Explore. Learn. Grow.",
    login: "Login",
    signup: "Signup",
    explore: "Explore Subjects",
    tutors: "Smart Tutors",
    progress: "Track Progress",
    downloads: "Downloads",
    feedback: "Feedback",
    quiz: "Take a Quiz",
    notFound: "Test NotFound",
  },
  hi: {
    welcome: "‡§è‡§Ü‡§à ‡§≤‡§∞‡•ç‡§®‡§Æ‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
    tagline: "‡§™‡•ç‡§∞‡•å‡§¶‡•ç‡§Ø‡•ã‡§ó‡§ø‡§ï‡•Ä ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§®‡§æ ‚Äî ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡•Ä‡§ñ‡•á‡§Ç, ‡§¨‡§¢‡§º‡•á‡§Ç‡•§",
    login: "‡§≤‡•â‡§ó‡§ø‡§®",
    signup: "‡§∏‡§æ‡§á‡§®‡§Ö‡§™",
    explore: "‡§µ‡§ø‡§∑‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£",
    tutors: "‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï",
    progress: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç",
    downloads: "‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§°‡•ç‡§∏",
    feedback: "‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ",
    quiz: "‡§ï‡•ç‡§µ‡§ø‡§ú ‡§≤‡•á‡§Ç",
    notFound: "‡§™‡•É‡§∑‡•ç‡§† ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ",
  },
  ta: {
    welcome: "AI LearnMate ‡Æá‡Æ±‡Øç‡Æï‡ØÅ ‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æ±‡Øã‡ÆÆ‡Øç",
    tagline: "‡Æ§‡Øä‡Æ¥‡Æø‡Æ≤‡Øç‡Æ®‡ØÅ‡Æü‡Øç‡Æ™‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Æ©‡Øç ‡Æï‡Æ±‡Øç‡Æ±‡Æ≤‡Øà ‡Æµ‡Æ≤‡ØÅ‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‚Äî ‡ÆÜ‡Æ∞‡Ææ‡ÆØ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç, ‡Æï‡Æ±‡Øç‡Æ±‡ØÅ‡Æï‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç, ‡Æµ‡Æ≥‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç.",
    login: "‡Æâ‡Æ≥‡Øç‡Æ®‡ØÅ‡Æ¥‡Øà",
    signup: "‡Æ™‡Æ§‡Æø‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç",
    explore: "‡Æ™‡Ææ‡Æü‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡ÆÜ‡Æ∞‡Ææ‡ÆØ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
    tutors: "‡Æ™‡ØÅ‡Æ§‡Øç‡Æ§‡Æø‡Æö‡Ææ‡Æ≤‡Æø ‡ÆÜ‡Æö‡Æø‡Æ∞‡Æø‡ÆØ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç",
    progress: "‡ÆÆ‡ØÅ‡Æ©‡Øç‡Æ©‡Øá‡Æ±‡Øç‡Æ±‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡Æ£‡Øç‡Æï‡Ææ‡Æ£‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
    downloads: "‡Æ™‡Æ§‡Æø‡Æµ‡Æø‡Æ±‡Æï‡Øç‡Æï‡Æô‡Øç‡Æï‡Æ≥‡Øç",
    feedback: "‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ",
    quiz: "‡Æµ‡Æø‡Æ©‡Ææ‡Æü‡Æø‡Æµ‡Æø‡Æ©‡Ææ ‡Æé‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æï‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
    notFound: "‡Æ™‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æï‡Æø‡Æü‡Øà‡Æï‡Øç‡Æï‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà",
  },
  te: {
    welcome: "AI LearnMate ‡∞ï‡∞ø ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç",
    tagline: "‡∞∏‡∞æ‡∞Ç‡∞ï‡±á‡∞§‡∞ø‡∞ï‡∞§‡∞§‡±ã ‡∞®‡±á‡∞∞‡±ç‡∞ö‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞∂‡∞ï‡±ç‡∞§‡∞ø‡∞µ‡∞Ç‡∞§‡∞Ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç ‚Äî ‡∞Ö‡∞®‡±ç‡∞µ‡±á‡∞∑‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø. ‡∞®‡±á‡∞∞‡±ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø. ‡∞Ö‡∞≠‡∞ø‡∞µ‡±É‡∞¶‡±ç‡∞ß‡∞ø ‡∞ö‡±Ü‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø.",
    login: "‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç",
    signup: "‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç",
    explore: "‡∞µ‡∞ø‡∞∑‡∞Ø‡∞æ‡∞≤‡∞®‡±Å ‡∞Ö‡∞®‡±ç‡∞µ‡±á‡∞∑‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø",
    tutors: "‡∞∏‡±ç‡∞Æ‡∞æ‡∞∞‡±ç‡∞ü‡±ç ‡∞ü‡±Ä‡∞ö‡∞∞‡±ç‡∞≤‡±Å",
    progress: "‡∞™‡±Å‡∞∞‡±ã‡∞ó‡∞§‡∞ø‡∞®‡∞ø ‡∞ü‡±ç‡∞∞‡∞æ‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø",
    downloads: "‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç‡∞≤‡±Å",
    feedback: "‡∞´‡±Ä‡∞°‡±ç‚Äå‡∞¨‡±ç‡∞Ø‡∞æ‡∞ï‡±ç",
    quiz: "‡∞ï‡±ç‡∞µ‡∞ø‡∞ú‡±ç ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø",
    notFound: "‡∞™‡±á‡∞ú‡±Ä ‡∞¶‡±ä‡∞∞‡∞ï‡∞≤‡±á‡∞¶‡±Å",
  },
};

const features = (t: any) => [
  { icon: <BoxArrowInRight size={24} />, text: t.login, link: "/login", color: "primary" },
  { icon: <PencilSquare size={24} />, text: t.signup, link: "/signup", color: "success" },
  { icon: <Book size={24} />, text: t.explore, link: "/subjects", color: "info" },
  { icon: <People size={24} />, text: t.tutors, link: "/tutors", color: "warning" },
  { icon: <BarChartLine size={24} />, text: t.progress, link: "/progress", color: "secondary" },
  { icon: <Download size={24} />, text: t.downloads, link: "/downloads", color: "danger" },
  { icon: <ChatSquareDots size={24} />, text: t.feedback, link: "/feedback", color: "dark" },
  { icon: <PatchQuestion size={24} />, text: t.quiz, link: "/quiz", color: "success" },
  { icon: <ExclamationTriangle size={24} />, text: t.notFound, link: "/404", color: "secondary" },
];

const HomePage: React.FC = () => {
  const [theme, setTheme] = useState<"light" | "dark">("light");
  const [fontSize, setFontSize] = useState<number>(16);
  const [language, setLanguage] = useState<"en" | "hi" | "ta" | "te">("en");

  useEffect(() => {
    AOS.init({ duration: 800 });
  }, []);

  const t = translations[language];

  return (
    <div className={`homepage-container ${theme}`} style={{ fontSize: `${fontSize}px` }}>
      {/* Sidebar */}
      <div className="sidebar">
        {features(t).map((f, idx) => (
          <Link
            key={idx}
            to={f.link}
            className={`sidebar-btn text-${f.color}`}
            data-aos="fade-right"
          >
            {f.icon}
            <span className="ms-2">{f.text}</span>
          </Link>
        ))}
      </div>

      {/* Main content */}
      <div className="main-content">
        {/* Controls */}
        <div className="d-flex justify-content-end align-items-center px-3 pt-3 gap-2">
          <button
            className="btn btn-sm btn-outline-secondary"
            onClick={() => setTheme(theme === "light" ? "dark" : "light")}
          >
            {theme === "light" ? "üåô Dark" : "‚òÄÔ∏è Light"}
          </button>
          <button
            className="btn btn-sm btn-outline-secondary"
            onClick={() => setFontSize((f) => Math.min(f + 2, 24))}
          >
            A+
          </button>
          <button
            className="btn btn-sm btn-outline-secondary"
            onClick={() => setFontSize((f) => Math.max(f - 2, 12))}
          >
            A‚àí
          </button>
          <select
            className="form-select form-select-sm"
            style={{ width: 140 }}
            value={language}
            onChange={(e) => setLanguage(e.target.value as any)}
          >
            <option value="en">English</option>
            <option value="hi">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</option>
            <option value="ta">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç</option>
            <option value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</option>
          </select>
        </div>

        {/* Hero */}
        <div className="text-center mt-4" data-aos="fade-down">
          <h1 className="display-5 fw-bold text-gradient">{t.welcome}</h1>
          <p className="text-muted">{t.tagline}</p>
        </div>
      </div>
    </div>
  );
};

export default HomePage;
